syntax = "proto3";
import "TrimTabMessages.proto";
import "ArduinoMessages.proto";

service AirmarReader {
    rpc GetAirmarData(Server_request) returns (AirmarData) {}
}

service AutonomousValueReader {
    rpc GetAutonomousValues(Readings) returns (ControlValues) {}
}

service PWMReader {
    rpc GetPWMInputs(ControlAngles) returns (PWMValues) {}
    rpc GetPWMValues(Server_request) returns (PWMValues) {}
    rpc GetControlAngles(Server_request) returns (ControlAngles) {}
}

service BBBSensorReader {
    rpc GetSensorData(Server_request) returns (BBBSersorData) {}
}

service TrimTabGetter {
    rpc SetTrimTabSetting(TrimState) returns (ApparentWind_Trim) {}
    rpc GetTrimState(Server_request) returns (TrimState) {}
    rpc GetApparentWind(Server_request) returns (ApparentWind_Trim) {}
}

message BBBSersorData {
    bool hall_port = 1;
    bool hall_stbd = 2;
    float pot_val = 3;
    bool pot_centered = 4;
}

message AirmarData {
    message ApparentWind_Airmar{
        float speed = 1; // Knots, 0.1 res
        float direction = 2; // Degs, 0.1 res
    }

    message TheoreticalWind{
        float speed = 1; // Knots, 0.1 res
        float direction = 2; // Degs, 0.1 res
    }

    message Temperature{
        float air_temp = 1;     // C, 0.1 res
        float wind_chill = 2;   // C, 0.1 res
    }
    
    message GPS {
        float lat = 1;
        float lon = 2;
        float alt = 3;
        float ground_speed = 4;
        float ground_course = 5;
    }

    message Compass{
        // Degs, 0-359.9 range, 0.1 res
        float x = 1;
        float y = 2;
        float z = 3;
    }

    message Acceleration {
        float x = 1;
        float y = 2;
        float z = 3;
    }

    message RateGyros {
        float phi_dot = 1;
        float theta_dot = 2;
        float psi_dot = 3;
    }
    
    message PitchRoll{
        // Degs, 50 deg range, 0.1 res
        float pitch = 1;
        float roll = 2;
    }

    ApparentWind_Airmar apparentWind = 1;
    TheoreticalWind theoreticalWind = 2;
    float baro_press = 3;   // hPa, 0.1 res
    Temperature temperature = 4;
    GPS gps = 5;
    Compass compass = 6;
    Acceleration acceleration = 7;
    RateGyros rateGyros = 9;
    PitchRoll pitchRoll = 10;
    float rel_hum = 11;      // %, 0.1 res    
}

message ControlValues {
    float rudderAngle = 1;
    float trimAngle = 2;
    float ballastAngle = 3;
}

message Readings{
    float apparentWind = 1;
}

message Server_request{
    bool req = 1;
}