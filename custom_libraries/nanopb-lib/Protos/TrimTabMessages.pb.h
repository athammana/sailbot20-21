/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Wed Feb 05 22:33:30 2020. */

#ifndef PB_TRIMTABMESSAGES_PB_H_INCLUDED
#define PB_TRIMTABMESSAGES_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ApparentWind {
    float apparent_wind;
/* @@protoc_insertion_point(struct:ApparentWind) */
} ApparentWind;

typedef struct _ControlAngle {
    uint32_t control_angle;
/* @@protoc_insertion_point(struct:ControlAngle) */
} ControlAngle;

/* Default values for struct fields */

/* Initializer values for message structs */
#define ControlAngle_init_default                {0}
#define ApparentWind_init_default                {0}
#define ControlAngle_init_zero                   {0}
#define ApparentWind_init_zero                   {0}

/* Field tags (for use in manual encoding/decoding) */
#define ApparentWind_apparent_wind_tag           1
#define ControlAngle_control_angle_tag           1

/* Struct field encoding specification for nanopb */
extern const pb_field_t ControlAngle_fields[2];
extern const pb_field_t ApparentWind_fields[2];

/* Maximum encoded size of messages (where known) */
#define ControlAngle_size                        6
#define ApparentWind_size                        5

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TRIMTABMESSAGES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
