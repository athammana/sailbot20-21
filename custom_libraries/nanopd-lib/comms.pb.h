/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Tue Oct 08 20:41:38 2019. */

#ifndef PB_COMMS_PB_H_INCLUDED
#define PB_COMMS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _TRIM_STATE {
    TRIM_STATE_MIN_LIFT = 0,
    TRIM_STATE_STBD_TACK = 1,
    TRIM_STATE_PORT_TACK = 2,
    TRIM_STATE_MAX_DRAG_STBD = 3,
    TRIM_STATE_MAX_DRAG_PORT = 4,
    TRIM_STATE_MAN_CTRL = 5
} TRIM_STATE;
#define _TRIM_STATE_MIN TRIM_STATE_MIN_LIFT
#define _TRIM_STATE_MAX TRIM_STATE_MAN_CTRL
#define _TRIM_STATE_ARRAYSIZE ((TRIM_STATE)(TRIM_STATE_MAN_CTRL+1))

typedef enum _DEVICE_ID {
    DEVICE_ID_RIGID_SAIL = 0,
    DEVICE_ID_HERO = 1000,
    DEVICE_ID_ARDUINO = 2000
} DEVICE_ID;
#define _DEVICE_ID_MIN DEVICE_ID_RIGID_SAIL
#define _DEVICE_ID_MAX DEVICE_ID_ARDUINO
#define _DEVICE_ID_ARRAYSIZE ((DEVICE_ID)(DEVICE_ID_ARDUINO+1))

/* Struct definitions */
typedef struct _vessel_state {
    DEVICE_ID device_id;
    TRIM_STATE state;
    uint32_t curHeelAngle;
    uint32_t maxHeelAngle;
    uint32_t controlAngle;
    uint32_t windAngle;
    uint32_t vIn;
    uint32_t hallPortTrip;
    uint32_t hallStbdTrip;
/* @@protoc_insertion_point(struct:vessel_state) */
} vessel_state;

/* Default values for struct fields */

/* Initializer values for message structs */
#define vessel_state_init_default                {_DEVICE_ID_MIN, _TRIM_STATE_MIN, 0, 0, 0, 0, 0, 0, 0}
#define vessel_state_init_zero                   {_DEVICE_ID_MIN, _TRIM_STATE_MIN, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define vessel_state_device_id_tag               1
#define vessel_state_state_tag                   2
#define vessel_state_curHeelAngle_tag            3
#define vessel_state_maxHeelAngle_tag            4
#define vessel_state_controlAngle_tag            5
#define vessel_state_windAngle_tag               6
#define vessel_state_vIn_tag                     7
#define vessel_state_hallPortTrip_tag            8
#define vessel_state_hallStbdTrip_tag            9

/* Struct field encoding specification for nanopb */
extern const pb_field_t vessel_state_fields[10];

/* Maximum encoded size of messages (where known) */
#define vessel_state_size                        47

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define COMMS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
